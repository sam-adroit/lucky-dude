{"version":3,"sources":["luckItems.js","button.component.jsx","luck.component.jsx","result.component.jsx","App.js","index.js"],"names":["luckItems","id","item","bgColor","Button","name","display","className","onClick","Luck","showLuckDisplay","useState","items","setItems","useEffect","interval","setInterval","arr","newArr","i","length","j","Math","floor","random","shuffle","clearInterval","map","luck","key","Result","App","setDisplay","console","log","ReactDOM","render","document","getElementById"],"mappings":"mTAAaA,EAAY,CACrB,CACIC,GAAI,EACJC,KAAM,QACNC,QAAS,eAEb,CACIF,GAAI,EACJC,KAAM,OACNC,QAAS,eAEb,CACIF,GAAI,EACJC,KAAM,SACNC,QAAS,eAEb,CACIF,GAAI,EACJC,KAAM,QACNC,QAAS,eAEb,CACIF,GAAI,EACJC,KAAM,YACNC,QAAS,eAEb,CACIF,GAAI,EACJC,KAAM,YACNC,QAAS,gBCtBFC,G,MAJA,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAAR,OACX,4BAAQC,UAAU,MAAMC,QAASF,GAAUD,KC2DhCI,G,MA/CF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBACX,EAA0BC,mBAASX,GAAnC,mBAAOY,EAAP,KAAcC,EAAd,KAWA,OATAC,qBAAU,WACN,IAAMC,EAAWC,aAAY,WACzBH,EAhBI,SAACI,GAGb,IAFA,IAAIC,EAAM,YAAOD,GAETE,EADAF,EAAIG,OAAS,EACND,EAAI,EAAGA,IAAI,CACtB,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAE,IADhB,EAEE,CAACD,EAAOC,GAAGD,EAAOG,IAAzCH,EAAOG,GAFc,KAEXH,EAAOC,GAFI,KAK1B,OAAOD,EAQUO,CAAQb,MAClB,KAEH,OAAO,WACHc,cAAcX,OAIlB,yBAAKR,UAAU,aACX,6CAEA,yBAAKA,UAAU,gBACVK,EAAMe,KAAI,SAAAC,GAAI,OACX,yBAAKC,IAAKD,EAAK3B,GAAIM,UAAS,oBAAeqB,EAAKzB,UAC5C,4BAAKyB,EAAK1B,WAKtB,kBAAC,EAAD,CAAQG,KAAK,iBAAiBC,QAASI,OCnBpCoB,G,MAfA,SAAC,GAAuB,IAAtBpB,EAAqB,EAArBA,gBACPkB,EAAO5B,EAAUsB,KAAKC,MAAMD,KAAKE,SAAWxB,EAAUoB,SAC5D,OACI,yBAAKb,UAAU,aACX,8CACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAS,sBAAiBqB,EAAKzB,UAChC,4BAAKyB,EAAK1B,QAGlB,kBAAC,EAAD,CAAQG,KAAK,aAAaC,QAASI,O,MCOhCqB,MAhBf,WAEE,MAA6BpB,oBAAS,GAAtC,mBAAML,EAAN,KAAe0B,EAAf,KAEMtB,EAAkB,WACtBuB,QAAQC,IAAI,YACZF,GAAY1B,IAEd,OACE,yBAAKC,UAAU,QACXD,GAAW,kBAAC,EAAD,CAAMI,gBAAiBA,IACnCJ,GAAW,kBAAC,EAAD,CAAQI,gBAAiBA,MCZ3CyB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.d2448d35.chunk.js","sourcesContent":["export const luckItems = [\r\n    {\r\n        id: 1,\r\n        item: \"$2.00\",\r\n        bgColor: \"item1-color\"\r\n    },\r\n    {\r\n        id: 2,\r\n        item: \"Book\",\r\n        bgColor: \"item2-color\"\r\n    },\r\n    {\r\n        id: 3,\r\n        item: \"Cinema\",\r\n        bgColor: \"item3-color\"\r\n    },\r\n    {\r\n        id: 4,\r\n        item: \"$0.00\",\r\n        bgColor: \"item4-color\"\r\n    },\r\n    {\r\n        id: 5,\r\n        item: \"iPhone 13\",\r\n        bgColor: \"item5-color\"\r\n    },\r\n    {\r\n        id: 6,\r\n        item: \"ice-cream\",\r\n        bgColor: \"item4-color\"\r\n    }\r\n];","import React from \"react\";\r\nimport \"./button.css\"\r\n\r\nconst Button = ({name, display}) => (\r\n    <button className=\"btn\" onClick={display}>{name}</button>\r\n)\r\n\r\nexport default Button;\r\n","import React,{useState, useEffect} from \"react\";\r\nimport { luckItems } from './luckItems';\r\nimport Button from \"./button.component\";\r\nimport \"./luck.style.css\";\r\n\r\nconst shuffle = (arr) => {\r\n    let newArr = [...arr]\r\n    let n = arr.length - 1;\r\n    for(let i = n; i > 0; i--){\r\n        let j = Math.floor(Math.random() * (i+1));\r\n        [newArr[j],newArr[i]] = [newArr[i],newArr[j]];\r\n    }\r\n  \r\n    return newArr;\r\n}\r\n\r\nconst Luck = ({showLuckDisplay}) => {\r\n    const [items, setItems] = useState(luckItems);\r\n    \r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setItems(shuffle(items))\r\n        }, 300)\r\n          \r\n        return () => {\r\n            clearInterval(interval);\r\n        }\r\n    });\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Try you Luck!</h1>\r\n\r\n            <div className=\"luck-display\">\r\n                {items.map(luck => (\r\n                    <div key={luck.id} className={`luck-item ${luck.bgColor}`}>\r\n                        <h2>{luck.item}</h2>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            \r\n            <Button name=\"Try your luck!\" display={showLuckDisplay}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n// function shuffle(originalArray) {\r\n//     const array = [...originalArray]\r\n//     let currentIndex = array.length\r\n//     let temporaryValue\r\n//     let randomIndex\r\n//     // While there remain elements to shuffle...\r\n//     while (0 !== currentIndex) {\r\n//       // Pick a remaining element...\r\n//       randomIndex = Math.floor(Math.random() * currentIndex)\r\n//       currentIndex -= 1\r\n//       // And swap it with the current element.\r\n//       temporaryValue = array[currentIndex]\r\n//       array[currentIndex] = array[randomIndex]\r\n//       array[randomIndex] = temporaryValue\r\n//     }\r\n//     return array\r\n// }\r\n\r\nexport default Luck;","import React from \"react\";\r\nimport { luckItems } from \"./luckItems\";\r\nimport Button from \"./button.component\";\r\n\r\nimport \"./result.style.css\";\r\n\r\nconst Result = ({showLuckDisplay}) => {\r\n    const luck = luckItems[Math.floor(Math.random() * luckItems.length)]\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Your luck got:</h1>\r\n            <div className=\"result-display\">\r\n                <div className={`result-item ${luck.bgColor}`}>\r\n                    <h2>{luck.item}</h2>\r\n                </div>\r\n            </div>\r\n            <Button name=\"Try again!\" display={showLuckDisplay} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result;","import React,{useState} from 'react';\nimport Luck from './luck.component';\nimport Result from './result.component';\n\nimport './App.css';\n\n\nfunction App() {\n  \n  const[display, setDisplay] = useState(false)\n\n  const showLuckDisplay = () => {\n    console.log(\"clicking\");\n    setDisplay(!display);\n  }\n  return (\n    <div className=\"App\">\n      {!display && <Luck showLuckDisplay={showLuckDisplay} />}\n      {display && <Result showLuckDisplay={showLuckDisplay} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}